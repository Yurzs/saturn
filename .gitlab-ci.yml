stages:
  - unittests
  - build
#  - docker_build


tests:
  stage: unittests
  tags:
    - alpine
  script:
    - apk update
    - apk add --update --no-cache --virtual .build-deps alpine-sdk python3-dev musl-dev postgresql-dev libffi-dev
    - pip3 install -U setuptools pip
    - pip3 install --no-cache-dir -r requirements.txt
    - python3 -m unittest discover tests *_test.py


pypi_build:
  stage: build
  tags:
    - alpine
  script:
    - apk update
    - apk add --update --no-cache --virtual .build-deps alpine-sdk python3-dev musl-dev postgresql-dev libffi-dev
    - pip3 install -U setuptools pip twine
    - python3 setup.py sdist
    - twine upload dist/*


#docker_build:
#  stage: docker_build
#  image: docker
#  tags:
#    - docker
#  script:
#    - docker build --pull -t "$CI_REGISTRY_IMAGE" .
#    - docker push "$CI_REGISTRY_IMAGE"
#  only:
#    - master
#  before_script:
#    - echo "$CI_REGISTRY_PASSWORD" | docker login -u "$CI_REGISTRY_USER" --password-stdin $CI_REGISTRY